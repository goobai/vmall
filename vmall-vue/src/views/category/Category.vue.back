<template>
  <div class="wrapper">
    <div class="root-list" ref="rootWrapper">
      <ul>
        <li v-for="(root,index) in rootList" :key="index" @click="itemClick(root.id,index,$event)"
        ><a>
          <span class="root-item" v-if="" v-bind:class="{'active':activeRootIndex==index}">{{root.name}}</span></a>
        </li>
      </ul>
    </div>
    <div class="category-list" ref="categoryWrapper">
      <div ref="scroll">
        <div class="category-item" v-for="(category,index) in categoryList" :key="index">
          <h4 class="category-title">{{category.name}}</h4>
          <ul>
            <li @click="categoryClick(son.id)" v-for="(son,index) in category.sons" :key="index">
              <img :src="son.img" alt="" class="son-img">
              <span> {{son.name}}</span>
            </li>
          </ul>
        </div>
      </div>
    </div>
  </div>
</template>

<script>
  import { getCategoryList, getRootCategory } from '../../api/api'
  import BScroll from 'better-scroll'

  export default {
    name: 'Category',
    data () {
      return {
        activeKey: 0,
        rootList: [],
        categoryList: [],
        clientHeight: 0,
        isActive: false,
        activeRootIndex: 0
      }
    },
    methods: {
      onChange (key) {
        this.activeKey = key

      },
      async initRootCategory () {
        let res = await getRootCategory()
        this.rootList = res.data
        let initId = this.rootList[0].id
        this.itemClick(initId, 0,event)
      },
      async itemClick (id, index,event) {
        console.log(event._constructed)
        if(event._constructed){
          return
        }
        let res = await getCategoryList(id)
        this.categoryList = res.data
        this.activeRootIndex = index
        this.$nextTick(() => {
          this.initScroll()
          this.categoryScroll.scrollTo(0, 0)
        })
      },
      categoryClick (id) {
        this.$router.push({ 'path': '/products/?type=category&id=' + id })
      },
      initScroll () {
        this.rootScroll = new BScroll(this.$refs.rootWrapper, {
          click: true,
          disableMouse: true,
          disableTouch: false,bounce:
            {
              top: false,
              bottom: false,
              left: false,
              right: false
            }
        })
        this.categoryScroll = new BScroll(this.$refs.categoryWrapper, {
          click: true,
          disableMouse: true,
          disableTouch: false,
          bounce:
            {
              top: false,
              bottom: false,
              left: false,
              right: false
            }
        })

      },
    },
    created () {
      this.initRootCategory()
    },
    mounted () {
    }
  }
</script>

<style scoped lang="less">
  .wrapper {
    display: flex;
    position: absolute;
    top: 50px;
    bottom: 50px;
    width: 100%;
    border-top:1px solid silver;
    .root-list {
      flex: 0 0 85px;
      width: 85px;
      background: #f3f5f7;
      overflow: hidden;

      .root-item {
        display: block;
        width: 100%;
        height: 46px;
        line-height: 46px;
        text-decoration: none;
        font-size: 14px;
        color: #080808;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
        text-align: center;

        &.active {
          display: block;
          width: 100%;
          height: 46px;
          line-height: 46px;
          text-decoration: none;
          font-size: 14px;
          background: #fff;
          color: #e93b3d;
          overflow: hidden;
          text-overflow: ellipsis;
          white-space: nowrap;
          text-align: center;
          font-weight: 600;
        }
      }
    }

    .category-list {
      flex: 1;
      overflow: hidden;

      .category-item {
        margin: 0px 7px 19px;

        .category-title {
          font-size: 14px;
        }

        ul {
          display: flex;
          flex-flow: row wrap;
          justify-content: flex-start;

          li {
            display: block;
            padding: 2px 10px;
            text-align: center;
            width: 3rem;

            span {
              width: 3rem;
              max-height: 100px;
              display: block;
              font-size: 12px;
              overflow: hidden;
              text-overflow: ellipsis;
              white-space: nowrap;
              text-align: center;
            }

            img {
              width: 3rem;
              height: 3rem;
              max-height: 100px;
              max-width: 100px;
              background-color: #c3c3c3;
            }

          }

        }
      }


    }


  }
</style>
